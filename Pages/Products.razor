@page "/products"
@inject ILogger<Products> logger;
@inject IProductService productService;

<style>
    .products-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, 280px);
        grid-auto-rows: auto;
        grid-gap: 1rem;
    }
</style>

<PageTitle>Products</PageTitle>

<ModuleTitle Title="Products" />

@if (products?.Count > 0)
{
    <div class="products-container">
    @foreach (var product in products)
        {
            <div class="card">
                <img class="card-img-top" src="@product.Images[0]" alt="Product" loading="lazy" width="270" height="210">
                <div class="card-body">
                    <h4><b>@product.Title</b></h4>
                    <p>@product.Price?.ToString("C")</p>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No products</p>
}

@code
{
    private List<Product>? products;

    protected override async Task OnInitializedAsync()
    {
        products = await GetProducts();
    }

    private async Task<List<Product>?> GetProducts()
    {
        return await productService.Get();
    }
}